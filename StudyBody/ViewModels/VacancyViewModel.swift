//
// VacancyViewModel.swift
// StudyBody
//

import Foundation
import SwiftUI

@MainActor
final class VacancyViewModel: ObservableObject {
    @Published var vacancies: [Vacancy] = []
    @Published var isLoading = false
    @Published var errorMessage: String?
    
    private let networkService = NetworkService.shared
    
    // MARK: ‚Äì –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞
    
    func fetchVacancies() async {
        isLoading = true
        errorMessage = nil
        defer { isLoading = false }
        
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å endpoints –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ backend
        // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        
        try? await Task.sleep(nanoseconds: 1_000_000_000) // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        
        self.vacancies = createMockVacancies()
    }
    
    // MARK: ‚Äì –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
    
    func createVacancy(_ vacancy: Vacancy) async -> Bool {
        isLoading = true
        errorMessage = nil
        defer { isLoading = false }
        
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–∞ backend
        // –ü–æ–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
        
        try? await Task.sleep(nanoseconds: 500_000_000)
        
        self.vacancies.insert(vacancy, at: 0)
        
        print("üìå –í–∞–∫–∞–Ω—Å–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ (–º–æ–∫)")
        
        return true
    }
    
    private func createMockVacancies() -> [Vacancy] {
        return [
            Vacancy(
                id: UUID(),
                title: "–ò—â—É –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –≤ pet-–ø—Ä–æ–µ–∫—Ç",
                summary: "–°–æ–±–∏—Ä–∞—é –º–æ–±–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ —É—á—ë—Ç—É –ø—Ä–∏–≤—ã—á–µ–∫. –ù—É–∂–µ–Ω –¥–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.",
                authorName: "–î–∞—à–∞ UIcraft",
                createdAt: Date(),
                tags: ["Design", "Figma", "UI/UX"]
            ),
            Vacancy(
                id: UUID(),
                title: "Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –≤ iOS-–∫–æ–º–∞–Ω–¥—É",
                summary: "–ü–∏—à–µ–º pet-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –æ–±–º–µ–Ω—É –∫–Ω–∏–≥–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–µ–º Firebase, —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ Vapor.",
                authorName: "–°–µ—Ä–≥–µ–π Backend–æ–≤",
                createdAt: Date().addingTimeInterval(-3600 * 24),
                tags: ["Backend", "Swift", "Vapor"]
            ),
            Vacancy(
                id: UUID(),
                title: "–ò—â—É iOS —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞",
                summary: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤. –ù—É–∂–µ–Ω –æ–ø—ã—Ç–Ω—ã–π iOS —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.",
                authorName: "–ê–Ω–Ω–∞ –ú–æ–±–∞–π–ª–æ–≤–∞",
                createdAt: Date().addingTimeInterval(-3600 * 48),
                tags: ["iOS", "SwiftUI", "Education"]
            )
        ]
    }
    
    func clearError() {
        errorMessage = nil
    }
}
